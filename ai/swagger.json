{
  "openapi": "3.0.4",
  "info": {
    "title": "Fishio API",
    "version": "v1"
  },
  "paths": {
    "/api/about": {
      "get": {
        "tags": [
          "About"
        ],
        "operationId": "GetApplicationInformation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationInfoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/competitions": {
      "post": {
        "tags": [
          "Competitions"
        ],
        "operationId": "CreateCompetition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompetitionCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Competitions"
        ],
        "operationId": "ListAvailableCompetitions",
        "parameters": [
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CompetitionStatus"
            }
          },
          {
            "name": "Type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CompetitionType"
            }
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/competitions/{competitionId}": {
      "get": {
        "tags": [
          "Competitions"
        ],
        "operationId": "GetCompetitionDetailsById",
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/competitions/mine": {
      "get": {
        "tags": [
          "Competitions"
        ],
        "operationId": "ListMyCompetitions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/competitions/{competitionId}/participants/join": {
      "post": {
        "tags": [
          "Competitions"
        ],
        "operationId": "JoinCompetitionAsParticipant",
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/competitions/{competitionId}/participants": {
      "get": {
        "tags": [
          "Competitions"
        ],
        "operationId": "ListCompetitionParticipantsForCompetition",
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/competitions/{competitionId}/participants/add-by-organizer": {
      "post": {
        "tags": [
          "Competitions"
        ],
        "operationId": "AddParticipantByCompetitionOrganizer",
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddParticipantCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/competitions/{competitionId}/participants/{participantId}": {
      "delete": {
        "tags": [
          "Competitions"
        ],
        "operationId": "RemoveParticipantByCompetitionOrganizer",
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/competitions/{competitionId}/participants/{participantId}/assign-judge": {
      "put": {
        "tags": [
          "Competitions"
        ],
        "operationId": "AssignJudgeRoleToParticipant",
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/competitions/{competitionId}/catches": {
      "post": {
        "tags": [
          "Competitions"
        ],
        "operationId": "RecordFishCatchForParticipant",
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordFishCatchCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Competitions"
        ],
        "operationId": "ListFishCatchesForCompetition",
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "operationId": "GetDashboardInformation",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/fisheries": {
      "post": {
        "tags": [
          "Fisheries"
        ],
        "operationId": "CreateFishery",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFisheryCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Fisheries"
        ],
        "operationId": "ListAllFisheries",
        "parameters": [
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FishSpeciesId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/fisheries/{fisheryId}": {
      "get": {
        "tags": [
          "Fisheries"
        ],
        "operationId": "GetFisheryDetailsById",
        "parameters": [
          {
            "name": "fisheryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Fisheries"
        ],
        "operationId": "UpdateFisheryById",
        "parameters": [
          {
            "name": "fisheryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFisheryCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/logbook": {
      "post": {
        "tags": [
          "Logbook"
        ],
        "operationId": "CreateLogbookEntry",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLogbookEntryCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Logbook"
        ],
        "operationId": "ListMyLogbookEntries",
        "parameters": [
          {
            "name": "FisheryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FishSpeciesId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "FromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/logbook/{entryId}": {
      "get": {
        "tags": [
          "Logbook"
        ],
        "operationId": "GetLogbookEntryDetailsById",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Logbook"
        ],
        "operationId": "UpdateLogbookEntryById",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLogbookEntryCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Logbook"
        ],
        "operationId": "DeleteLogbookEntryById",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/lookup/enums/category-types": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "Pobiera wartości dla enuma CategoryType",
        "operationId": "GetCategoryTypeEnumValues",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumValueDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lookup/enums/category-metrics": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "Pobiera wartości dla enuma CategoryMetric",
        "operationId": "GetCategoryMetricEnumValues",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumValueDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lookup/enums/category-calculation-logics": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "Pobiera wartości dla enuma CategoryCalculationLogic",
        "operationId": "GetCategoryCalculationLogicEnumValues",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumValueDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lookup/enums/category-entity-types": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "Pobiera wartości dla enuma CategoryEntityType",
        "operationId": "GetCategoryEntityTypeEnumValues",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumValueDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lookup/enums/competition-statuses": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "Pobiera wartości dla enuma CompetitionStatus",
        "operationId": "GetCompetitionStatusEnumValues",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumValueDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lookup/enums/competition-type": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "Pobiera wartości dla enuma CompetitionType",
        "operationId": "GetCompetitionTypeEnumValues",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumValueDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lookup/enums/participant-role": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "summary": "Pobiera wartości dla enuma ParticipantRole",
        "operationId": "GetParticipantRoleEnumValues",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnumValueDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lookup/category-definitions": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "operationId": "GetCategoryDefinitions",
        "parameters": [
          {
            "name": "FilterByType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/CategoryType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDefinitionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lookup/fishspecies": {
      "get": {
        "tags": [
          "LookupData"
        ],
        "operationId": "GetAllFishSpecies",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/results/{token}": {
      "get": {
        "tags": [
          "PublicResults"
        ],
        "operationId": "GetResultsByToken",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/search": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "SearchAvailableUsers",
        "parameters": [
          {
            "name": "SearchTerm",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "MaxResults",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Void"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddParticipantCommand": {
        "type": "object",
        "properties": {
          "competitionId": {
            "type": "integer",
            "format": "int32"
          },
          "participantId": {
            "type": "integer",
            "format": "int32"
          },
          "isGuest": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ApplicationInfoDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "technologies": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "buildInfo": {
            "$ref": "#/components/schemas/BuildInformation"
          }
        },
        "additionalProperties": false
      },
      "BuildInformation": {
        "type": "object",
        "properties": {
          "gitSha": {
            "type": "string",
            "nullable": true
          },
          "buildTimestamp": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CategoryCalculationLogic": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "CategoryDefinitionDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/CategoryType"
          },
          "metric": {
            "$ref": "#/components/schemas/CategoryMetric"
          },
          "calculationLogic": {
            "$ref": "#/components/schemas/CategoryCalculationLogic"
          },
          "entityType": {
            "$ref": "#/components/schemas/CategoryEntityType"
          },
          "requiresSpecificFishSpecies": {
            "type": "boolean"
          },
          "isGlobal": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CategoryEntityType": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "CategoryMetric": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "CategoryType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "CompetitionStatus": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "CompetitionType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "CreateCompetitionCommand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "fishSpeciesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "judgeIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateFisheryCommand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "fishSpeciesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateLogbookEntryCommand": {
        "type": "object",
        "properties": {
          "fisheryId": {
            "type": "integer",
            "format": "int32"
          },
          "fishSpeciesId": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "caughtAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EnumValueDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HttpValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "RecordFishCatchCommand": {
        "type": "object",
        "properties": {
          "competitionId": {
            "type": "integer",
            "format": "int32"
          },
          "participantId": {
            "type": "string",
            "nullable": true
          },
          "fishSpeciesId": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateFisheryCommand": {
        "type": "object",
        "properties": {
          "fisheryId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "location": {
            "type": "string",
            "nullable": true
          },
          "fishSpeciesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateLogbookEntryCommand": {
        "type": "object",
        "properties": {
          "logbookEntryId": {
            "type": "integer",
            "format": "int32"
          },
          "fisheryId": {
            "type": "integer",
            "format": "int32"
          },
          "fishSpeciesId": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "weight": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "caughtAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Void": {
        "type": "object",
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Please enter a valid JWT token. Example: \"Bearer {token}\"",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}