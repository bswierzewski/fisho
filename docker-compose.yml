# This docker-compose file sets up a complete local development environment for Fishio.
# It includes the API, Client, PostgreSQL Database, and Caddy reverse proxy.
# Environment variables are expected to be in a .env file in the root directory.

services:
  # fishio_db: PostgreSQL Database Service
  fishio_db:
    image: postgres:16-alpine
    container_name: fishio_db
    environment:
      - POSTGRES_DB=fishio
      - POSTGRES_USER=fishio_user
      - POSTGRES_PASSWORD=${DB_PASSWORD} # Loaded from .env file
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persists database data
    ports:
      - "5432:5432" # Expose DB port for local development tools (e.g., pgAdmin)
    networks:
      - fishio_network
    restart: unless-stopped # Ensures DB stays up during development

  # fishio_api: .NET API Service
  fishio_api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: fishio_api
    env_file:
      - ./.env # Explicitly load .env file variables
    networks:
      - fishio_network

  # fishio_client: Next.js Client Service
  fishio_client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        # Build-time arguments passed from .env file
        - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
        - NEXT_PUBLIC_CLERK_TOKEN_TEMPLATE=${NEXT_PUBLIC_CLERK_TOKEN_TEMPLATE}
    container_name: fishio_client
    env_file:
      - ./.env # Explicitly load .env file variables
    networks:
      - fishio_network

  # caddy: Reverse Proxy Service
  caddy:
    image: caddy:2-alpine
    container_name: fishio_caddy
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "443:443/udp" # HTTP/3
    volumes:
      - ./.Caddyfile:/etc/caddy/Caddyfile:ro # Mount local Caddyfile (read-only)
      - caddy_data:/data # Persists Caddy's certificates and state
      - caddy_config:/config # Persists Caddy's configuration
    depends_on:
      - fishio_api
      - fishio_client
    networks:
      - fishio_network
    restart: unless-stopped

# Define shared network for service communication
networks:
  fishio_network:
    driver: bridge

# Define persistent named volumes
volumes:
  postgres_data: # For PostgreSQL data
  caddy_data: # For Caddy TLS certificates and other data
  caddy_config: # For Caddy configuration state
